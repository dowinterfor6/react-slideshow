{"version":3,"sources":["three/threeSlideshow.js","components/ThreeSlideshow.jsx","App.jsx","index.js"],"names":["Slideshow","window","containerElement","images","this","isAnimating","setupScene","drawInitial","initHelpers","addEventListener","onWindowResize","renderer","render","scene","camera","THREE","innerWidth","innerHeight","antialias","setSize","setClearColor","appendChild","domElement","position","z","axesHelper","add","geometry","texture","load","url","anisotropy","capabilities","getMaxAnisotropy","material","map","side","texture2","material2","group","plane","plane2","target","Math","PI","rotation","y","requestAnimationFrame","customAnimate","bind","aspect","updateProjectionMatrix","ThreeSlideshow","slideshowContainerRef","useRef","slideshowRef","useEffect","current","ref","className","onClick","test","App","sliderComponent","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.c62a84f4.chunk.js","sourcesContent":["import * as THREE from \"three\";\n\nclass Slideshow {\n  constructor(window, containerElement, images) {\n    this.containerElement = containerElement;\n    this.images = images;\n    this.window = window;\n    this.isAnimating = false;\n\n    this.setupScene();\n    this.drawInitial();\n    this.initHelpers();\n    this.window.addEventListener(\"resize\", () => this.onWindowResize());\n\n    this.renderer.render(this.scene, this.camera);\n  }\n\n  setupScene() {\n    this.scene = new THREE.Scene();\n    this.camera = new THREE.PerspectiveCamera(\n      75,\n      this.window.innerWidth / this.window.innerHeight,\n      0.1,\n      1000\n    );\n    this.renderer = new THREE.WebGLRenderer({ antialias: true });\n    // TODO: Set size\n    // TODO: Set background color\n    this.renderer.setSize(window.innerWidth, window.innerHeight);\n    this.renderer.setClearColor(0xffffff);\n    this.containerElement.appendChild(this.renderer.domElement);\n    this.camera.position.z = 10;\n  }\n\n  initHelpers() {\n    const axesHelper = new THREE.AxesHelper(5);\n    this.scene.add(axesHelper);\n  }\n\n  drawInitial() {\n    // TODO: Something with loading manager\n    // TODO: Lazy loading?\n    // TODO: Use texture.offset?\n\n    const geometry = new THREE.PlaneGeometry(12, 9);\n    const texture = new THREE.TextureLoader().load(this.images[0].url);\n    texture.anisotropy = this.renderer.capabilities.getMaxAnisotropy();\n    const material = new THREE.MeshBasicMaterial({\n      map: texture,\n      side: THREE.FrontSide,\n    });\n    const texture2 = new THREE.TextureLoader().load(this.images[1].url);\n    texture2.anisotropy = this.renderer.capabilities.getMaxAnisotropy();\n    const material2 = new THREE.MeshBasicMaterial({\n      map: texture2,\n      side: THREE.BackSide,\n    });\n    this.group = new THREE.Group();\n    this.plane = new THREE.Mesh(geometry, material);\n    this.plane2 = new THREE.Mesh(geometry, material2);\n    this.group.add(this.plane2);\n    this.group.add(this.plane);\n    this.scene.add(this.group);\n  }\n\n  customAnimate(target) {\n    // TODO: An optimization would be to set rotation speed relative to pi\n    //       Then the final adjustment would be extremely small;\n    if (target > Math.PI) {\n      this.isAnimating = false;\n      // TODO: This is hardcoded\n      this.group.rotation.y = Math.PI;\n    } else {\n      target += 0.01;\n      this.group.rotation.y += 0.01;\n      requestAnimationFrame(this.customAnimate.bind(this, target));\n    }\n    this.renderer.render(this.scene, this.camera);\n  }\n\n  onWindowResize() {\n    this.renderer.setSize(this.window.innerWidth, this.window.innerHeight);\n    this.camera.aspect = this.window.innerWidth / this.window.innerHeight;\n\n    this.camera.updateProjectionMatrix();\n  }\n\n  test() {\n    this.customAnimate(0);\n    this.isAnimating = true;\n  }\n}\n\nexport default Slideshow;\n","import React, { useEffect, useRef } from \"react\";\nimport Slideshow from \"../three/threeSlideshow\";\n\nconst ThreeSlideshow = ({ images }) => {\n  const slideshowContainerRef = useRef();\n  const slideshowRef = useRef();\n\n  useEffect(() => {\n    slideshowRef.current = new Slideshow(\n      window,\n      slideshowContainerRef.current,\n      images\n    );\n  }, []);\n\n  return (\n    <section ref={slideshowContainerRef} className=\"three-slideshow-container\">\n      <button onClick={() => slideshowRef.current.test()}>\n        Something lmao\n      </button>\n    </section>\n  );\n};\n\nexport default ThreeSlideshow;\n","import React from \"react\";\nimport ThreeSlideshow from \"./components/ThreeSlideshow\";\n// import Slider from \"./components/Slider\";\n// import WebGlSlider from \"./components/WebGlSlider\";\n// Need to do this because of bundler\n// import img1 from \"./assets/images/sample-1.jpg\";\n// import img2 from \"./assets/images/sample-2.jpg\";\n\nconst App = () => {\n  const images = [\n    {\n      url:\n        \"https://images.pexels.com/photos/2187622/pexels-photo-2187622.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\",\n    },\n    {\n      url:\n        \"https://images.pexels.com/photos/2187662/pexels-photo-2187662.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\",\n    },\n    {\n      url:\n        \"https://images.pexels.com/photos/5220130/pexels-photo-5220130.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\",\n    },\n    {\n      url:\n        \"https://images.pexels.com/photos/2131687/pexels-photo-2131687.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\",\n    },\n    // { url: img1 },\n    // { url: img2 },\n    {\n      url:\n        \"https://images.pexels.com/photos/3408354/pexels-photo-3408354.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\",\n    },\n    {\n      url:\n        \"https://images.pexels.com/photos/2187603/pexels-photo-2187603.jpeg?auto=compress&cs=tinysrgb&dpr=2&h=650&w=940\",\n    },\n  ];\n\n  // TODO: Timing function option\n  // const options = {\n  //   width: 600, //px\n  //   height: 400, //px\n  //   perspective: 1000, //px, > width\n  //   rows: 5,\n  //   cols: 9,\n  //   rowConfig: {\n  //     fromTop: false, // bool, default: true\n  //     delay: 100,\n  //   },\n  //   colConfig: {\n  //     fromLeft: true, // bool, default: true\n  //     delay: 100,\n  //   },\n  //   pauseOnBlur: true, //default: true\n  // };\n\n  const sliderComponent = <ThreeSlideshow images={images} />;\n\n  return <div className=\"App\">{sliderComponent}</div>;\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.scss\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}